  name: DevSecOps Workflow
  
  on: 
    push:
        branches: [main]
    pull_request:
        branches: [main]
        
  jobs:
    build:
        runs-on: ubuntu-latest

        env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            TEST_DATABASE_PREFIX: test_

        services:
            postgres:
                image: postgres:latest
                env:
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: postgres
                  POSTGRES_DB: github_actions
                ports:
                  - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: 3.12

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Unit tests and linters
              run: |
                # Unit test
                python manage.py test
                
                # Code formatter
                black --check .

                # Import sort
                isort --Check-only .

                # lint Flake8
                flake8 .

            - name: Test SCA vulnerabilities | Static Composition Analiysis
              run: |
                pyraider check -f requirements.txt

            - name: Check package licence
              run: |
                pip-licenses --format=json > licenses.json
                ./scripts/run-license-compliance.sh

            - name: Scan for Secrets with Trufflehog
              run: |
               trufflehog3 --no-history --format json --output report.json --exclude "env/*"
            - name: Build an image from Dockerfile
              run: |
               docker build -t built-image:scan .
            - name: Run dockle
              uses: goodwithtech/dockle-action@main
              with:
                image: 'built-image:scan'
                format: 'list'
                exit-code: '1'
                exit-level: 'warn'
                ignore: 'CIS-DI-0001,DKL-DI-0006,DKL-DI-0005,CIS-DI-0010,CIS-DI-0007'

    dev_checks:
        runs-on: ubuntu-latest
        needs: build
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.11'

          - name: Install system packages (if needed)
            run: sudo apt-get update && sudo apt-get install -y build-essential python3-dev libssl-dev libffi-dev

          - name: Install dev requirements
            run: python -m pip install --upgrade pip setuptools wheel && pip install -r dev-requirements.txt

          - name: Run linters
            run: flake8 .

          - name: Run tests
            run: pytest -q

          - name: Generate license report
            run: pip-licenses --format=json > licenses.json